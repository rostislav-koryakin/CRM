// <auto-generated />
using System;
using CRM.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRM.Web.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210514154357_004")]
    partial class _004
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRM.Web.Models.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("SalesmanId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 16, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Onboarding meeting",
                            SalesmanId = 1,
                            StartDate = new DateTime(2020, 10, 16, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Meeting"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 23, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Negotiation Call",
                            SalesmanId = 2,
                            StartDate = new DateTime(2020, 10, 23, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 3,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Onboarding call",
                            SalesmanId = 3,
                            StartDate = new DateTime(2020, 10, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 4,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Negotiation meeting",
                            SalesmanId = 4,
                            StartDate = new DateTime(2020, 10, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Meeting"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 5,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Negotiation meeting",
                            SalesmanId = 5,
                            StartDate = new DateTime(2020, 10, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Meeting"
                        },
                        new
                        {
                            Id = 6,
                            ContactId = 6,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2020, 10, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Negotiation meeting",
                            SalesmanId = 6,
                            StartDate = new DateTime(2020, 10, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Meeting"
                        },
                        new
                        {
                            Id = 7,
                            ContactId = 1,
                            CreatedDate = new DateTime(2021, 1, 25, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2021, 1, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Negotiation call",
                            SalesmanId = 1,
                            StartDate = new DateTime(2021, 1, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        },
                        new
                        {
                            Id = 8,
                            ContactId = 1,
                            CreatedDate = new DateTime(2021, 2, 25, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2021, 2, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Proposal call",
                            SalesmanId = 1,
                            StartDate = new DateTime(2021, 2, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        },
                        new
                        {
                            Id = 9,
                            ContactId = 1,
                            CreatedDate = new DateTime(2021, 2, 26, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2021, 2, 26, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Contact",
                            SalesmanId = 1,
                            StartDate = new DateTime(2021, 2, 26, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        },
                        new
                        {
                            Id = 10,
                            ContactId = 2,
                            CreatedDate = new DateTime(2021, 2, 26, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description . . .",
                            EndDate = new DateTime(2021, 2, 26, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Contact",
                            SalesmanId = 2,
                            StartDate = new DateTime(2021, 2, 26, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Type = "Call"
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("varchar(127)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<int>("NoOfEmployees")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Street")
                        .HasColumnType("varchar(127)");

                    b.Property<string>("TaxpayerNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(127)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("TaxpayerNumber")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Portland",
                            Country = "USA",
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "IT",
                            Name = "The Stones",
                            NoOfEmployees = 0,
                            Street = "35",
                            TaxpayerNumber = "9173848217",
                            Website = "www.stones.c",
                            ZipCode = "3121"
                        },
                        new
                        {
                            Id = 2,
                            City = "New York",
                            Country = "USA",
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "IT",
                            Name = "Newman Corp.",
                            NoOfEmployees = 0,
                            Street = "5",
                            TaxpayerNumber = "34539292923",
                            Website = "www.newman-corp.c",
                            ZipCode = "23232"
                        },
                        new
                        {
                            Id = 3,
                            City = "Denver",
                            Country = "USA",
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "IT",
                            Name = "Tech-Mech Inc.",
                            NoOfEmployees = 0,
                            Street = "12",
                            TaxpayerNumber = "34534545345",
                            Website = "www.tech-mech.c",
                            ZipCode = "54211"
                        },
                        new
                        {
                            Id = 4,
                            City = "New Heaven",
                            Country = "USA",
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "Finance",
                            Name = "Mills & Johnes",
                            NoOfEmployees = 0,
                            Street = "91",
                            TaxpayerNumber = "9876983453",
                            Website = "www.mills-and-jones.c",
                            ZipCode = "30100"
                        },
                        new
                        {
                            Id = 5,
                            City = "Denver",
                            Country = "USA",
                            CreatedDate = new DateTime(2021, 1, 1, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "Construction",
                            Name = "GTIcm Corp.",
                            NoOfEmployees = 0,
                            Street = "1",
                            TaxpayerNumber = "9000003",
                            Website = "www.gitcm.c",
                            ZipCode = "93100"
                        },
                        new
                        {
                            Id = 6,
                            City = "Berlin",
                            Country = "Germany",
                            CreatedDate = new DateTime(2021, 1, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "Health",
                            Name = "PREC Clinic Inc.",
                            NoOfEmployees = 0,
                            Street = "Strauss 12",
                            TaxpayerNumber = "9100003",
                            Website = "www.prec-clinic.c",
                            ZipCode = "01233"
                        },
                        new
                        {
                            Id = 7,
                            City = "Berlin",
                            Country = "Germany",
                            CreatedDate = new DateTime(2021, 1, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Industry = "Health",
                            Name = "Dent Beauty GmbH",
                            NoOfEmployees = 0,
                            Street = "Strauss 14",
                            TaxpayerNumber = "9200003",
                            Website = "www.dent-beauty-gmbh.c",
                            ZipCode = "01233"
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(127)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "emma.stone@stones.c",
                            FirstName = "Emma",
                            LastName = "Stone",
                            Phone = "32131221311",
                            Position = "CEO",
                            Source = "Blog"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@newman.c",
                            FirstName = "John",
                            LastName = "Newman",
                            Phone = "123123123",
                            Position = "CTO",
                            Source = "Blog"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "adam@newman.c",
                            FirstName = "Adam",
                            LastName = "Newman",
                            Phone = "423123123",
                            Position = "Sales Rep",
                            Source = "Website"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 3,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "michel@tech-mech.c",
                            FirstName = "Michel",
                            LastName = "Mech",
                            Phone = "34525234",
                            Position = "Sales Rep",
                            Source = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 4,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "abel@mills-johnes.c",
                            FirstName = "Abel",
                            LastName = "Mills",
                            Phone = "76432342",
                            Position = "Sales Rep",
                            Source = "Marketing"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 4,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Desc . . .",
                            Email = "kate@mills-johnes.c",
                            FirstName = "Kate",
                            LastName = "Johnes",
                            Phone = "76432341",
                            Position = "Sales Rep",
                            Source = "Events"
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 5,
                            CreatedDate = new DateTime(2021, 1, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@gitcm.c",
                            FirstName = "Jane",
                            LastName = "Coyre",
                            Phone = "76432347",
                            Position = "Sales Rep",
                            Source = "Marketing"
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 6,
                            CreatedDate = new DateTime(2021, 1, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "georgina@prec-clinic.c",
                            FirstName = "Georgina",
                            LastName = "Murray",
                            Phone = "76432348",
                            Position = "Sales Rep",
                            Source = "Marketing"
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnName("Closing Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContactId");

                    b.HasIndex("SalesmanId");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Newman Project",
                            SalesmanId = 1,
                            Stage = "New",
                            TotalAmount = 1000000.0m
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            ContactId = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "The Stones Project X",
                            SalesmanId = 2,
                            Stage = "Analisis",
                            TotalAmount = 929301.0m
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            ContactId = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "The Stones Project Y",
                            SalesmanId = 3,
                            Stage = "Offer",
                            TotalAmount = 1000000.0m
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4,
                            ContactId = 5,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Mills & Johnes Rebranding Project",
                            SalesmanId = 3,
                            Stage = "Negotiation",
                            TotalAmount = 10000.0m
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Newman Project2",
                            SalesmanId = 3,
                            Stage = "Negotiation",
                            TotalAmount = 1000000.0m
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Newman Project3",
                            SalesmanId = 1,
                            Stage = "Won",
                            TotalAmount = 1000000.0m
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Newman Project4",
                            SalesmanId = 1,
                            Stage = "Invoiced",
                            TotalAmount = 1000000.0m
                        },
                        new
                        {
                            Id = 8,
                            ClosingDate = new DateTime(2021, 1, 1, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 2,
                            ContactId = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            Name = "Newman Project5",
                            SalesmanId = 1,
                            Stage = "Closed",
                            TotalAmount = 1000000.0m
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.DealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("DealProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealId = 1,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            DealId = 1,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            DealId = 1,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            DealId = 1,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            DealId = 2,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            DealId = 3,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            DealId = 3,
                            ProductId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            DealId = 4,
                            ProductId = 5,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Digital Marketing",
                            Price = 10000.0m,
                            VAT = 20.0m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Branding",
                            Price = 20000.0m,
                            VAT = 20.0m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Content Creation",
                            Price = 30000.0m,
                            VAT = 20.0m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Strategic Planning",
                            Price = 40000.0m,
                            VAT = 20.0m
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Rebranding",
                            Price = 10000.0m,
                            VAT = 20.0m
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Salesman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.Property<decimal>("MonthlySalesGoal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("Salesmen");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "lee.johnes@sales.c",
                            FirstName = "Lee",
                            LastName = "Johnes",
                            MonthlySalesGoal = 0m,
                            Phone = "500500500"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "amanda.rodrigez@sales.c",
                            FirstName = "Amanda",
                            LastName = "Rodrigez",
                            MonthlySalesGoal = 0m,
                            Phone = "100100100"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "emanuela.kozminsky@sales.c",
                            FirstName = "Emanuela",
                            LastName = "Kozminsky",
                            MonthlySalesGoal = 0m,
                            Phone = "200200200"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 9, 16, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "ivo.willson@sales.c",
                            FirstName = "Ivo",
                            LastName = "Willson",
                            MonthlySalesGoal = 0m,
                            Phone = "300300300"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2021, 1, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "daniel.portman@sales.c",
                            FirstName = "Daniel",
                            LastName = "Portman",
                            MonthlySalesGoal = 0m,
                            Phone = "300200300"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2021, 1, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna.petersen@sales.c",
                            FirstName = "Anna",
                            LastName = "Petersen",
                            MonthlySalesGoal = 0m,
                            Phone = "300100300"
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.ScoreRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("Created Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("RelationSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScoreRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Criteria = "Industry",
                            Points = 10,
                            RelationSymbol = "Equals",
                            Value = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Criteria = "Size",
                            Points = 10,
                            RelationSymbol = "IsGreater",
                            Value = "50"
                        },
                        new
                        {
                            Id = 3,
                            Criteria = "Country",
                            Points = 10,
                            RelationSymbol = "Equals",
                            Value = "USA"
                        });
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Activity", b =>
                {
                    b.HasOne("CRM.Web.Models.Entities.Contact", "Contact")
                        .WithMany("Activities")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Web.Models.Entities.Salesman", "Salesman")
                        .WithMany("Activities")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Contact", b =>
                {
                    b.HasOne("CRM.Web.Models.Entities.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.Deal", b =>
                {
                    b.HasOne("CRM.Web.Models.Entities.Company", "Company")
                        .WithMany("Deals")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRM.Web.Models.Entities.Contact", "Contact")
                        .WithMany("Deals")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRM.Web.Models.Entities.Salesman", "Salesman")
                        .WithMany("Deals")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CRM.Web.Models.Entities.DealProduct", b =>
                {
                    b.HasOne("CRM.Web.Models.Entities.Deal", "Deal")
                        .WithMany("DealsProducts")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Web.Models.Entities.Product", "Product")
                        .WithMany("DealsProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
